

// [最大公约数(Greatest Common Divisor, GCD)] 当两个非负整数 x 和 y 都是 0 的时候, 它们的最大公约数是0.
// 当两者至少有一个不是 0 的时候, 它们的最大公约数是可以出尽二者的最大整数.
// 因此, gcd(0, 0)=0; gcd(10, 0)=10; gcd(0, 10)=10; gcd(20, 30)=10; 求最大公约数的
// 欧几里得算法(Euclid's Algorithm)是一个递归算法, 据说出现在公元前375年, 或许是最早的递归算法实例.
// 它的定义由这个公式(1-6)给出
//
// \begin{ align }
//     gcd(x, y) =
//     \begin{ cases }
//         x                        & y = 0 \\
//         gcd(y, x \ \ mod \ \  y) & y > 0
//     \end{ cases }
// \end{ align }


// 题 23_1:
// 用公式(1-6)手工计算 gcd(20, 30) 和 gcd(114, 42)
//
// gcd(20, 30)  = gcd(30, 20 % 30)
//              = gcd(30, 20)
//              = gcd(20, 30 % 20)
//              = gcd(20, 10)
//              = gcd(10, 20 % 10)
//              = gcd(10, 0)
//              = 10
//
//
// gcd(114, 42) = gcd(42, 114 % 42)
//              = gcd(42, 30)
//              = gcd(30, 42 % 30)
//              = gcd(30, 12)
//              = gcd(12, 30 % 12)
//              = gcd(12, 6)
//              = gcd(6, 12 % 6)
//              = gcd(6, 0)
//              = 6

