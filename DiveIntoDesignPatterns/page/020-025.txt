面向对象之间的关系: 依赖、关联、聚合、组合


依赖(Dependency)
	类的方法的形参中要求std::map<std::string, std::string>, 表示这个类的这个方法依赖std::map, std::string 两个类型, 
	因为在函数体内可以调用map的方法或者string的方法, 这些方法都是公开而且不变的方法.
	
	备注: uml中没有表示依赖的表达方式


关联(Association)
    关联可视为一种特殊，即一个对象总是拥有访问与其交互的对象的权限，
	而简单的依赖关系并不会在对象间建立永久性的联系。

    1. 在类中声明一个int类型的成员变量, 
	   表示这个类依赖int类型, 因为它可以调用所有int类型的方法, 
	   同时也表示这个类关联int类型, 因为类中的每个方法总是能访问这个成员变量的方法.

	2. 在类中声明一个std::vector<std::string>类型的成员变量, 
	   表示这个类依赖 vector, string 两个类型, 因为它可以通过不同方式调用这两个类型的方法,
	   同时也表示这个类关联vector, string, 因为类中的每个方法总是能访问这个成员变量的方法.


聚合(Aggregation)
	通常在聚合关系中，一个对象“拥有”一组其他对象，并扮演着容器或集合的角色。
	TODO： 这里定义的并不是很清楚, 后续阅读完本书, 需要回到这里回答这个定义.


组合(Composition)
	TODO： 这里定义的并不是很清楚, 后续阅读完本书, 需要回到这里回答这个定义.
